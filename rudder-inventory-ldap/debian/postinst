#!/bin/sh
# postinst script for rudder-inventory-ldap
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
  configure)
    # remove old ldso.conf if it was installed by a previous version (starting from 4.3)
    if [ -e /etc/ld.so.conf.d/rudder-inventory-ldap.conf ]
    then
      rm -f /etc/ld.so.conf.d/rudder-inventory-ldap.conf
      ldconfig
    fi

    # Reload systemd when it is available so that it creates sysv-init shims
    # This is necessary to make the service command work, and will be obsolete when we create systemd units
    systemctl daemon-reload

    # Restart rudder-slapd to take schema changes into account
    echo -n "INFO: Restarting rudder-slapd..."
    # during upgrade, service may not have been started with systemctl
    # detect first if rudder-slapd is seen running ?
    RUDDER_SLAPD_RUNNING_SERVICE=0
    RUDDER_SLAPD_RUNNING_SYSTEMCTL=0
    if service rudder-slapd status > /dev/null; then 
      RUDDER_SLAPD_RUNNING_SERVICE=1
    fi
    if systemctl is-active rudder-slapd > /dev/null; then 
      RUDDER_SLAPD_RUNNING_SYSTEMCTL=1
    fi

    if [ $RUDDER_SLAPD_RUNNING_SERVICE -eq 1 ] && [ $RUDDER_SLAPD_RUNNING_SYSTEMCTL -eq 0 ]
    then
      # systemctl doesn't know the service is started, we stop it with service first
      service rudder-slapd stop > /dev/null
    fi

    systemctl restart rudder-slapd >/dev/null
    echo " Done"
  ;;

    abort-upgrade|abort-remove|abort-deconfigure)
  ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
