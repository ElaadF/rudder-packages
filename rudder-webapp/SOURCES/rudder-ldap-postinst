#!/bin/bash
set -e

PACKAGE_NAME="rudder-ldap"
LOG_FILE="/var/log/rudder/install/${PACKAGE_NAME}.log"
LDAP_CONF="/opt/rudder/etc/openldap/slapd.conf"

RUDDER_FIRST_INSTALL="$1"
if [ -z "$1" ]
then
  echo "Usage: $0 <RUDDER_FIRST_INSTALL>"
  echo " This should only be called from a package postinstall command"
  exit 1
fi

echo "`date` - Starting ${PACKAGE_NAME} post installation script" >> ${LOG_FILE}

# Remove pidfile and argsfile
sed -i '/^[ \t]*pidfile/d' "${LDAP_CONF}"
sed -i '/^[ \t]*argsfile/d' "${LDAP_CONF}"

# Migration from pre-5.1, moving settings to slapd.conf
if [ -f /var/rudder/tmp/default-rudder-slapd ]; then
  echo "Starting migration of /etc/default/rudder-slapd" >> ${LOG_FILE}  
  . /var/rudder/tmp/default-rudder-slapd

  if [ ! -z "${RUDDER_MDBSIZE}" ] && [ "${RUDDER_MDBSIZE}" != "auto" ] || [ "${RUDDER_MDBSIZE}" != "noauto" ]; then
    echo "Importing value of RUDDER_MDBSIZE: ${RUDDER_MDBSIZE}" >> ${LOG_FILE}
    sed -i '/^[ \t]*maxsize/d' "${LDAP_CONF}"
    sed -i 's/^\([ \t]*suffix[ \t]\+"cn=rudder-configuration".*\)/\1\nmaxsize '${RUDDER_MDBSIZE}'/' "${LDAP_CONF}"
  fi
  if [ ! -z "${RUDDER_MAX_INCOMING_AUTH}" ]; then
    echo "Importing value of RUDDER_MAX_INCOMING_AUTH: ${RUDDER_MAX_INCOMING_AUTH}" >> ${LOG_FILE}
    sed -i '/^[ \t]*sockbuf_max_incoming_auth/d' "${LDAP_CONF}"
    sed -i 's/^\([ \t]*argsfile[ \t]\+\/.*\)/\1\nsockbuf_max_incoming_auth '${RUDDER_MAX_INCOMING_AUTH}'/' "${LDAP_CONF}"
  fi

  rm -f /etc/default/rudder-slapd /var/rudder/tmp/default-rudder-slapd
fi

# Create the package user
if ! getent passwd rudder-slapd >/dev/null; then
  echo -n "INFO: Creating the rudder-slapd user..."
  useradd --system --shell /bin/false --home-dir /var/rudder/ldap --comment "Rudder LDAP server,,," rudder-slapd >/dev/null
  chown root:rudder-slapd "${LDAP_CONF}"
  chmod 640 "${LDAP_CONF}"
  chown -R rudder-slapd:rudder-slapd /var/rudder/ldap/
  echo " Done"
fi

if [ "${RUDDER_FIRST_INSTALL}" = "true" ]; then
  echo -n "INFO: Setting rudder-slapd as a boot service..."
  systemctl daemon-reload
  systemctl enable rudder-slapd
  echo " Done"
fi

# Need to restart to take schema changes into account
echo -n "INFO: Restarting rudder-slapd..."

# during upgrade, service may not have been started with systemctl
# detect first if rudder-slapd is seen running ?
RUDDER_SLAPD_RUNNING_SERVICE=0
RUDDER_SLAPD_RUNNING_SYSTEMCTL=0
if service rudder-slapd status > /dev/null; then 
  RUDDER_SLAPD_RUNNING_SERVICE=1
fi
if systemctl is-active rudder-slapd > /dev/null; then 
  RUDDER_SLAPD_RUNNING_SYSTEMCTL=1
fi

if [ $RUDDER_SLAPD_RUNNING_SERVICE -eq 1 ] && [ $RUDDER_SLAPD_RUNNING_SYSTEMCTL -eq 0 ]
then
  # systemctl doesn't know the service is started, we stop it with service first
  service rudder-slapd stop > /dev/null
fi


systemctl restart rudder-slapd >/dev/null
echo " Done"

echo "`date` - Ending ${PACKAGE_NAME} post installation script" >> ${LOG_FILE}

